@using Scooterland.Client.Modules.ProductModules;
@using Scooterland.Client.Modules.SaleModules;
@using Scooterland.Shared.Models;
@using Scooterland.Client.Services.CustomerServices;
@page "/sales/current-sale"
@inject NavigationManager Navigation


<div class="flex-container">
	<!-- Første komponent (fylder 2/3 af bredden) -->
	<div class="two-thirds-width">
		<ProductSelectOverview />
		@* <ProductOverview ChosenProduct="@product"/> *@
	</div>

	<!-- Anden komponent (fylder 1/3 af bredden) -->
	<div class="one-third-width">
		<CurrentSaleOverview Customer="@customer" />
	</div>
</div>


<button class="btn btn-primary" @onclick="GoToPreviousPage">
	Tilbage
</button>

<div class="flex-box">
	<button class="btn btn-primary">
		Opret salg
	</button>
</div>

@code {
	[Parameter]
	[SupplyParameterFromQuery]
	public string? CustomerJson { get; set; }

	[Inject]
	public ICustomerService Service { get; set; }

	Customer customer;

	protected override async Task OnInitializedAsync()
	{
		if (!string.IsNullOrEmpty(CustomerJson))
		{
			customer = System.Text.Json.JsonSerializer.Deserialize<Customer>(Uri.UnescapeDataString(CustomerJson));
		}
	}

	private Product product;
	private void GoToPreviousPage()
	{
		Navigation.NavigateTo("/sales/create-sale");
	}
}
