@using Scooterland.Client.Modules.SaleModules;
@using Scooterland.Client.Services.SaleServices;
@using Scooterland.Shared.Models;
@page "/sales/invoice"
<h3>InvoicePage</h3>

<div class="invoiceContainer">
	<div class="overview">
		<InvoiceCurrentOverview />
	</div>
	<div class="endSale">
		<button @onclick="EndSale">Afslut salg</button>
	</div>
</div>

@code {
	[Inject]
	public ISaleService SaleService { get; set; }

	[Inject]
	public NavigationManager Navigation { get; set; }

	[Parameter]
	[SupplyParameterFromQuery]
	public int SaleId { get; set; }

	private Sale sale;

	protected override async Task OnInitializedAsync()
	{
		// Brug SaleId til at hente salgsoplysninger
		sale = await SaleService.GetSale(SaleId);
	}

	private async Task EndSale()
	{
		Sale currentSale = await SaleService.GetSale(SaleId);
		currentSale.EndDate = DateTime.Now;
		await SaleService.UpdateSale(currentSale);
		Navigation.NavigateTo($"/");
	}
}
