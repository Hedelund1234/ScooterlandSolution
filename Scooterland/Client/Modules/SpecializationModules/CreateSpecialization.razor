@using Scooterland.Shared.Models
@using Scooterland.Client.Services.SpecializationServices

<h3>Opret Specialisering</h3>

<EditForm Model="@SpecializationModel"
		  OnValidSubmit="@HandleValidSubmit"
		  OnInvalidSubmit="@HandleInvalidSubmit"
		  class="row p-3">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="col-md-6 mb-3">
		<label for="Brand">Brand navn</label>
		<InputText id="Brand" @bind-Value="SpecializationModel.Brand" class="form-control" />
		<ValidationMessage For="@(() => SpecializationModel.Brand)" />
	</div>

	<div class="col-12 mb-3">
		<button type="submit" class="btn btn-primary">Tilføj</button>
	</div>

</EditForm>

@if (isSuccessBoxVisible)
{
	<div class="message-box">
		<div class="message-content">
			<h4>Specialisering oprettet</h4>
			<p>@(SpecializationModel.Brand) blev oprettet korrekt</p>
			<div class="message-success">
				<button @onclick="CloseMessageBox">OK</button>
			</div>
		</div>
	</div>
}

@if (isErrorBoxVisible)
{
	<div class="message-box">
		<div class="message-content">
			<h4>Fejl</h4>
			<p>Specialisering blev ikke oprettet</p>
			<div class="message-success">
				<button @onclick="CloseMessageBox">OK</button>
			</div>
		</div>
	</div>
}

@code {

	[Inject]
	public ISpecializationService Service { get; set; }
	Specialization SpecializationModel = new Specialization();
	private int ErrorCode { get; set; } = 0;
	private bool isSuccessBoxVisible = false;
	private bool isErrorBoxVisible = false;

	private async Task HandleValidSubmit()
	{
		if (SpecializationModel.Brand == null)
		{
			isErrorBoxVisible = true;
		}
		else
		{
			ErrorCode = await Service.AddSpecialization(SpecializationModel);

			Console.WriteLine("Specialization added: return code: " + ErrorCode);
			isSuccessBoxVisible = true;
			SpecializationModel = new Specialization();
		}
		
	}
	private void HandleInvalidSubmit()
	{

	}

	private void CloseMessageBox()
	{
		isSuccessBoxVisible = false;
		isErrorBoxVisible = false;
	}
}
