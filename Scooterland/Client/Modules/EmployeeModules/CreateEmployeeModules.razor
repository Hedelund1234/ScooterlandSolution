@using Scooterland.Shared.Models
@using Scooterland.Client.Services.EmployeeServices
@using Scooterland.Client.Services.SpecializationServices

<h3>Opret ny ansat</h3>



<EditForm Model="@EmployeeModel"
OnValidSubmit="@HandleValidSubmit"
OnInvalidSubmit="@HandleInvalidSubmit"
class="row p-3">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="col-md-6 mb-3">
		<label for="Name">Navn</label>
		<InputText id="Name" @bind-Value="EmployeeModel.Name" class="form-control" />
		<ValidationMessage For="@(() => EmployeeModel.Name)" />
	</div>

	<div class="col-md-2 mb-3">
		<label for="Role">Role</label>
		<InputText id="Role" @bind-Value="EmployeeModel.Role" class="form-control" />
		<ValidationMessage For="@(() => EmployeeModel.Role)" />
	</div>

	<div class="col-12 mb-3">
		<button type="submit" class="btn btn-primary">Tilføj</button>
	</div>

</EditForm>

@if (isSuccessBoxVisible)
{
	<div class="message-box">
		<div class="message-content">
			<h4>Ansat oprettet</h4>
			<p>@(EmployeeModel.Role) blev oprettet korrekt</p>
			<div class="message-success">
				<button @onclick="CloseMessageBox">OK</button>
			</div>
		</div>
	</div>
}

@if (isErrorBoxVisible)
{
	<div class="message-box">
		<div class="message-content">
			<h4>Fejl</h4>
			<p>Ansat blev ikke oprettet</p>
			<div class="message-success">
				<button @onclick="CloseMessageBox">OK</button>
			</div>
		</div>
	</div>
}

@code {
	[Inject]
	public IEmployeeService Service { get; set; }
	Employee EmployeeModel = new Employee();
	private int ErrorCode { get; set; } = 0;
	private bool isSuccessBoxVisible = false;
	private bool isErrorBoxVisible = false;

	private async Task HandleValidSubmit()
	{
		if (EmployeeModel.Name == null || EmployeeModel.Role == null)
		{
			isErrorBoxVisible = true;
		}
		else
		{
			ErrorCode = await Service.AddEmployee(EmployeeModel);

			Console.WriteLine("Employee added: return code: " + ErrorCode);
			isSuccessBoxVisible = true;
			EmployeeModel = new Employee();
		}
	}
	private void HandleInvalidSubmit()
	{

	}

	private void CloseMessageBox()
	{
		isSuccessBoxVisible = false;
		isErrorBoxVisible = false;
	}
}
